digraph G{
rankdir=LR
edge[color=white]
Node0[shape=record, label =" <index0> index 0 | { Prev 17  | Node type is UNKNOWN. Data: nothing | <next0> Next 1 } " ];
Node0->Node1;
Node1[shape=record, label =" <index1> index 1 | { Prev 0  | Node type is WORD. Data: define | <next1> Next 2 } " ];
Node1->Node2;
Node2[shape=record, label =" <index2> index 2 | { Prev 1  | Node type is WORD. Data: func | <next2> Next 3 } " ];
Node2->Node3;
Node3[shape=record, label =" <index3> index 3 | { Prev 2  | Node type is BRACKET. Data: ( | <next3> Next 4 } " ];
Node3->Node4;
Node4[shape=record, label =" <index4> index 4 | { Prev 3  | Node type is BRACKET. Data: ) | <next4> Next 5 } " ];
Node4->Node5;
Node5[shape=record, label =" <index5> index 5 | { Prev 4  | Node type is BRACKET. Data: { | <next5> Next 6 } " ];
Node5->Node6;
Node6[shape=record, label =" <index6> index 6 | { Prev 5  | Node type is WORD. Data: var | <next6> Next 7 } " ];
Node6->Node7;
Node7[shape=record, label =" <index7> index 7 | { Prev 6  | Node type is WORD. Data: x | <next7> Next 8 } " ];
Node7->Node8;
Node8[shape=record, label =" <index8> index 8 | { Prev 7  | Node type is OPERATOR. Data: = | <next8> Next 9 } " ];
Node8->Node9;
Node9[shape=record, label =" <index9> index 9 | { Prev 8  | Node type is NUMBER. Data: 0 | <next9> Next 10 } " ];
Node9->Node10;
Node10[shape=record, label =" <index10> index 10 | { Prev 9  | Node type is OPERATOR. Data: ; | <next10> Next 11 } " ];
Node10->Node11;
Node11[shape=record, label =" <index11> index 11 | { Prev 10  | Node type is WORD. Data: print | <next11> Next 12 } " ];
Node11->Node12;
Node12[shape=record, label =" <index12> index 12 | { Prev 11  | Node type is BRACKET. Data: ( | <next12> Next 13 } " ];
Node12->Node13;
Node13[shape=record, label =" <index13> index 13 | { Prev 12  | Node type is WORD. Data: x | <next13> Next 14 } " ];
Node13->Node14;
Node14[shape=record, label =" <index14> index 14 | { Prev 13  | Node type is BRACKET. Data: ) | <next14> Next 15 } " ];
Node14->Node15;
Node15[shape=record, label =" <index15> index 15 | { Prev 14  | Node type is OPERATOR. Data: ; | <next15> Next 16 } " ];
Node15->Node16;
Node16[shape=record, label =" <index16> index 16 | { Prev 15  | Node type is BRACKET. Data: } | <next16> Next 17 } " ];
Node16->Node17;
Node17[shape=record, label =" <index17> index 17 | { Prev 16  | Node type is TERMINATED. Data: nothing | <next17> Next 0 } " ];
Node17->Node18;
Node18[shape=record, label =" <index18> index 18 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next18> Next -19 } " ];
Node18->Node19;
Node19[shape=record, label =" <index19> index 19 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next19> Next -20 } " ];
edge[color=black]
Node1:<next1> -> Node2:<index2>;
Node2:<next2> -> Node3:<index3>;
Node3:<next3> -> Node4:<index4>;
Node4:<next4> -> Node5:<index5>;
Node5:<next5> -> Node6:<index6>;
Node6:<next6> -> Node7:<index7>;
Node7:<next7> -> Node8:<index8>;
Node8:<next8> -> Node9:<index9>;
Node9:<next9> -> Node10:<index10>;
Node10:<next10> -> Node11:<index11>;
Node11:<next11> -> Node12:<index12>;
Node12:<next12> -> Node13:<index13>;
Node13:<next13> -> Node14:<index14>;
Node14:<next14> -> Node15:<index15>;
Node15:<next15> -> Node16:<index16>;
Node16:<next16> -> Node17:<index17>;
"head: 1" -> Node1:<index1>
Node17:<index17> -> "tail: 17"
"free: 18" -> Node18:<index18>
"size: 17""capacity: 20"}