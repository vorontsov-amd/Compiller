digraph G{
rankdir=LR
edge[color=white]
Node0[shape=record, label =" <index0> index 0 | { Prev 70  | Node type is UNKNOWN. Data: nothing | <next0> Next 1 } " ];
Node0->Node1;
Node1[shape=record, label =" <index1> index 1 | { Prev 0  | Node type is WORD. Data: define | <next1> Next 2 } " ];
Node1->Node2;
Node2[shape=record, label =" <index2> index 2 | { Prev 1  | Node type is WORD. Data: main | <next2> Next 3 } " ];
Node2->Node3;
Node3[shape=record, label =" <index3> index 3 | { Prev 2  | Node type is BRACKET. Data: ( | <next3> Next 4 } " ];
Node3->Node4;
Node4[shape=record, label =" <index4> index 4 | { Prev 3  | Node type is BRACKET. Data: ) | <next4> Next 5 } " ];
Node4->Node5;
Node5[shape=record, label =" <index5> index 5 | { Prev 4  | Node type is BRACKET. Data: { | <next5> Next 6 } " ];
Node5->Node6;
Node6[shape=record, label =" <index6> index 6 | { Prev 5  | Node type is WORD. Data: var | <next6> Next 7 } " ];
Node6->Node7;
Node7[shape=record, label =" <index7> index 7 | { Prev 6  | Node type is WORD. Data: pivo | <next7> Next 8 } " ];
Node7->Node8;
Node8[shape=record, label =" <index8> index 8 | { Prev 7  | Node type is OPERATOR. Data: = | <next8> Next 9 } " ];
Node8->Node9;
Node9[shape=record, label =" <index9> index 9 | { Prev 8  | Node type is NUMBER. Data: 10 | <next9> Next 10 } " ];
Node9->Node10;
Node10[shape=record, label =" <index10> index 10 | { Prev 9  | Node type is OPERATOR. Data: ; | <next10> Next 11 } " ];
Node10->Node11;
Node11[shape=record, label =" <index11> index 11 | { Prev 10  | Node type is WORD. Data: pivo | <next11> Next 12 } " ];
Node11->Node12;
Node12[shape=record, label =" <index12> index 12 | { Prev 11  | Node type is OPERATOR. Data: = | <next12> Next 13 } " ];
Node12->Node13;
Node13[shape=record, label =" <index13> index 13 | { Prev 12  | Node type is WORD. Data: pivo | <next13> Next 14 } " ];
Node13->Node14;
Node14[shape=record, label =" <index14> index 14 | { Prev 13  | Node type is OPERATOR. Data: + | <next14> Next 15 } " ];
Node14->Node15;
Node15[shape=record, label =" <index15> index 15 | { Prev 14  | Node type is NUMBER. Data: 1 | <next15> Next 16 } " ];
Node15->Node16;
Node16[shape=record, label =" <index16> index 16 | { Prev 15  | Node type is OPERATOR. Data: ; | <next16> Next 17 } " ];
Node16->Node17;
Node17[shape=record, label =" <index17> index 17 | { Prev 16  | Node type is WORD. Data: while | <next17> Next 18 } " ];
Node17->Node18;
Node18[shape=record, label =" <index18> index 18 | { Prev 17  | Node type is BRACKET. Data: ( | <next18> Next 19 } " ];
Node18->Node19;
Node19[shape=record, label =" <index19> index 19 | { Prev 18  | Node type is WORD. Data: pivo | <next19> Next 20 } " ];
Node19->Node20;
Node20[shape=record, label =" <index20> index 20 | { Prev 19  | Node type is OPERATOR. Data: != | <next20> Next 21 } " ];
Node20->Node21;
Node21[shape=record, label =" <index21> index 21 | { Prev 20  | Node type is NUMBER. Data: 0 | <next21> Next 22 } " ];
Node21->Node22;
Node22[shape=record, label =" <index22> index 22 | { Prev 21  | Node type is BRACKET. Data: ) | <next22> Next 23 } " ];
Node22->Node23;
Node23[shape=record, label =" <index23> index 23 | { Prev 22  | Node type is BRACKET. Data: { | <next23> Next 24 } " ];
Node23->Node24;
Node24[shape=record, label =" <index24> index 24 | { Prev 23  | Node type is WORD. Data: drink | <next24> Next 25 } " ];
Node24->Node25;
Node25[shape=record, label =" <index25> index 25 | { Prev 24  | Node type is BRACKET. Data: ( | <next25> Next 26 } " ];
Node25->Node26;
Node26[shape=record, label =" <index26> index 26 | { Prev 25  | Node type is WORD. Data: pivo | <next26> Next 27 } " ];
Node26->Node27;
Node27[shape=record, label =" <index27> index 27 | { Prev 26  | Node type is BRACKET. Data: ) | <next27> Next 28 } " ];
Node27->Node28;
Node28[shape=record, label =" <index28> index 28 | { Prev 27  | Node type is OPERATOR. Data: ; | <next28> Next 29 } " ];
Node28->Node29;
Node29[shape=record, label =" <index29> index 29 | { Prev 28  | Node type is WORD. Data: pivo | <next29> Next 30 } " ];
Node29->Node30;
Node30[shape=record, label =" <index30> index 30 | { Prev 29  | Node type is OPERATOR. Data: = | <next30> Next 31 } " ];
Node30->Node31;
Node31[shape=record, label =" <index31> index 31 | { Prev 30  | Node type is OPERATOR. Data: - | <next31> Next 32 } " ];
Node31->Node32;
Node32[shape=record, label =" <index32> index 32 | { Prev 31  | Node type is WORD. Data: pivo | <next32> Next 33 } " ];
Node32->Node33;
Node33[shape=record, label =" <index33> index 33 | { Prev 32  | Node type is OPERATOR. Data: - | <next33> Next 34 } " ];
Node33->Node34;
Node34[shape=record, label =" <index34> index 34 | { Prev 33  | Node type is NUMBER. Data: 1 | <next34> Next 35 } " ];
Node34->Node35;
Node35[shape=record, label =" <index35> index 35 | { Prev 34  | Node type is OPERATOR. Data: ; | <next35> Next 36 } " ];
Node35->Node36;
Node36[shape=record, label =" <index36> index 36 | { Prev 35  | Node type is WORD. Data: var | <next36> Next 37 } " ];
Node36->Node37;
Node37[shape=record, label =" <index37> index 37 | { Prev 36  | Node type is WORD. Data: vodka | <next37> Next 38 } " ];
Node37->Node38;
Node38[shape=record, label =" <index38> index 38 | { Prev 37  | Node type is OPERATOR. Data: = | <next38> Next 39 } " ];
Node38->Node39;
Node39[shape=record, label =" <index39> index 39 | { Prev 38  | Node type is NUMBER. Data: 10 | <next39> Next 40 } " ];
Node39->Node40;
Node40[shape=record, label =" <index40> index 40 | { Prev 39  | Node type is OPERATOR. Data: ; | <next40> Next 41 } " ];
Node40->Node41;
Node41[shape=record, label =" <index41> index 41 | { Prev 40  | Node type is WORD. Data: vodka | <next41> Next 42 } " ];
Node41->Node42;
Node42[shape=record, label =" <index42> index 42 | { Prev 41  | Node type is OPERATOR. Data: = | <next42> Next 43 } " ];
Node42->Node43;
Node43[shape=record, label =" <index43> index 43 | { Prev 42  | Node type is WORD. Data: vodka | <next43> Next 44 } " ];
Node43->Node44;
Node44[shape=record, label =" <index44> index 44 | { Prev 43  | Node type is OPERATOR. Data: * | <next44> Next 45 } " ];
Node44->Node45;
Node45[shape=record, label =" <index45> index 45 | { Prev 44  | Node type is WORD_WITH_NUMBERS. Data: 0.9 | <next45> Next 46 } " ];
Node45->Node46;
Node46[shape=record, label =" <index46> index 46 | { Prev 45  | Node type is OPERATOR. Data: ; | <next46> Next 47 } " ];
Node46->Node47;
Node47[shape=record, label =" <index47> index 47 | { Prev 46  | Node type is BRACKET. Data: } | <next47> Next 48 } " ];
Node47->Node48;
Node48[shape=record, label =" <index48> index 48 | { Prev 47  | Node type is OPERATOR. Data: ; | <next48> Next 49 } " ];
Node48->Node49;
Node49[shape=record, label =" <index49> index 49 | { Prev 48  | Node type is BRACKET. Data: } | <next49> Next 50 } " ];
Node49->Node50;
Node50[shape=record, label =" <index50> index 50 | { Prev 49  | Node type is WORD. Data: define | <next50> Next 51 } " ];
Node50->Node51;
Node51[shape=record, label =" <index51> index 51 | { Prev 50  | Node type is WORD. Data: drink | <next51> Next 52 } " ];
Node51->Node52;
Node52[shape=record, label =" <index52> index 52 | { Prev 51  | Node type is BRACKET. Data: ( | <next52> Next 53 } " ];
Node52->Node53;
Node53[shape=record, label =" <index53> index 53 | { Prev 52  | Node type is WORD. Data: pivo | <next53> Next 54 } " ];
Node53->Node54;
Node54[shape=record, label =" <index54> index 54 | { Prev 53  | Node type is BRACKET. Data: ) | <next54> Next 55 } " ];
Node54->Node55;
Node55[shape=record, label =" <index55> index 55 | { Prev 54  | Node type is BRACKET. Data: { | <next55> Next 56 } " ];
Node55->Node56;
Node56[shape=record, label =" <index56> index 56 | { Prev 55  | Node type is WORD. Data: pivo | <next56> Next 57 } " ];
Node56->Node57;
Node57[shape=record, label =" <index57> index 57 | { Prev 56  | Node type is OPERATOR. Data: = | <next57> Next 58 } " ];
Node57->Node58;
Node58[shape=record, label =" <index58> index 58 | { Prev 57  | Node type is NUMBER. Data: 0 | <next58> Next 59 } " ];
Node58->Node59;
Node59[shape=record, label =" <index59> index 59 | { Prev 58  | Node type is OPERATOR. Data: ; | <next59> Next 60 } " ];
Node59->Node60;
Node60[shape=record, label =" <index60> index 60 | { Prev 59  | Node type is BRACKET. Data: } | <next60> Next 61 } " ];
Node60->Node61;
Node61[shape=record, label =" <index61> index 61 | { Prev 60  | Node type is WORD. Data: define | <next61> Next 62 } " ];
Node61->Node62;
Node62[shape=record, label =" <index62> index 62 | { Prev 61  | Node type is WORD. Data: pizdec | <next62> Next 63 } " ];
Node62->Node63;
Node63[shape=record, label =" <index63> index 63 | { Prev 62  | Node type is BRACKET. Data: ( | <next63> Next 64 } " ];
Node63->Node64;
Node64[shape=record, label =" <index64> index 64 | { Prev 63  | Node type is BRACKET. Data: ) | <next64> Next 65 } " ];
Node64->Node65;
Node65[shape=record, label =" <index65> index 65 | { Prev 64  | Node type is BRACKET. Data: { | <next65> Next 66 } " ];
Node65->Node66;
Node66[shape=record, label =" <index66> index 66 | { Prev 65  | Node type is WORD. Data: var | <next66> Next 67 } " ];
Node66->Node67;
Node67[shape=record, label =" <index67> index 67 | { Prev 66  | Node type is WORD. Data: sosat | <next67> Next 68 } " ];
Node67->Node68;
Node68[shape=record, label =" <index68> index 68 | { Prev 67  | Node type is OPERATOR. Data: ; | <next68> Next 69 } " ];
Node68->Node69;
Node69[shape=record, label =" <index69> index 69 | { Prev 68  | Node type is BRACKET. Data: } | <next69> Next 70 } " ];
Node69->Node70;
Node70[shape=record, label =" <index70> index 70 | { Prev 69  | Node type is TERMINATED. Data: nothing | <next70> Next 0 } " ];
Node70->Node71;
Node71[shape=record, label =" <index71> index 71 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next71> Next -72 } " ];
Node71->Node72;
Node72[shape=record, label =" <index72> index 72 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next72> Next -73 } " ];
Node72->Node73;
Node73[shape=record, label =" <index73> index 73 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next73> Next -74 } " ];
Node73->Node74;
Node74[shape=record, label =" <index74> index 74 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next74> Next -75 } " ];
Node74->Node75;
Node75[shape=record, label =" <index75> index 75 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next75> Next -76 } " ];
Node75->Node76;
Node76[shape=record, label =" <index76> index 76 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next76> Next -77 } " ];
Node76->Node77;
Node77[shape=record, label =" <index77> index 77 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next77> Next -78 } " ];
Node77->Node78;
Node78[shape=record, label =" <index78> index 78 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next78> Next -79 } " ];
Node78->Node79;
Node79[shape=record, label =" <index79> index 79 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next79> Next -80 } " ];
edge[color=black]
Node1:<next1> -> Node2:<index2>;
Node2:<next2> -> Node3:<index3>;
Node3:<next3> -> Node4:<index4>;
Node4:<next4> -> Node5:<index5>;
Node5:<next5> -> Node6:<index6>;
Node6:<next6> -> Node7:<index7>;
Node7:<next7> -> Node8:<index8>;
Node8:<next8> -> Node9:<index9>;
Node9:<next9> -> Node10:<index10>;
Node10:<next10> -> Node11:<index11>;
Node11:<next11> -> Node12:<index12>;
Node12:<next12> -> Node13:<index13>;
Node13:<next13> -> Node14:<index14>;
Node14:<next14> -> Node15:<index15>;
Node15:<next15> -> Node16:<index16>;
Node16:<next16> -> Node17:<index17>;
Node17:<next17> -> Node18:<index18>;
Node18:<next18> -> Node19:<index19>;
Node19:<next19> -> Node20:<index20>;
Node20:<next20> -> Node21:<index21>;
Node21:<next21> -> Node22:<index22>;
Node22:<next22> -> Node23:<index23>;
Node23:<next23> -> Node24:<index24>;
Node24:<next24> -> Node25:<index25>;
Node25:<next25> -> Node26:<index26>;
Node26:<next26> -> Node27:<index27>;
Node27:<next27> -> Node28:<index28>;
Node28:<next28> -> Node29:<index29>;
Node29:<next29> -> Node30:<index30>;
Node30:<next30> -> Node31:<index31>;
Node31:<next31> -> Node32:<index32>;
Node32:<next32> -> Node33:<index33>;
Node33:<next33> -> Node34:<index34>;
Node34:<next34> -> Node35:<index35>;
Node35:<next35> -> Node36:<index36>;
Node36:<next36> -> Node37:<index37>;
Node37:<next37> -> Node38:<index38>;
Node38:<next38> -> Node39:<index39>;
Node39:<next39> -> Node40:<index40>;
Node40:<next40> -> Node41:<index41>;
Node41:<next41> -> Node42:<index42>;
Node42:<next42> -> Node43:<index43>;
Node43:<next43> -> Node44:<index44>;
Node44:<next44> -> Node45:<index45>;
Node45:<next45> -> Node46:<index46>;
Node46:<next46> -> Node47:<index47>;
Node47:<next47> -> Node48:<index48>;
Node48:<next48> -> Node49:<index49>;
Node49:<next49> -> Node50:<index50>;
Node50:<next50> -> Node51:<index51>;
Node51:<next51> -> Node52:<index52>;
Node52:<next52> -> Node53:<index53>;
Node53:<next53> -> Node54:<index54>;
Node54:<next54> -> Node55:<index55>;
Node55:<next55> -> Node56:<index56>;
Node56:<next56> -> Node57:<index57>;
Node57:<next57> -> Node58:<index58>;
Node58:<next58> -> Node59:<index59>;
Node59:<next59> -> Node60:<index60>;
Node60:<next60> -> Node61:<index61>;
Node61:<next61> -> Node62:<index62>;
Node62:<next62> -> Node63:<index63>;
Node63:<next63> -> Node64:<index64>;
Node64:<next64> -> Node65:<index65>;
Node65:<next65> -> Node66:<index66>;
Node66:<next66> -> Node67:<index67>;
Node67:<next67> -> Node68:<index68>;
Node68:<next68> -> Node69:<index69>;
Node69:<next69> -> Node70:<index70>;
"head: 1" -> Node1:<index1>
Node70:<index70> -> "tail: 70"
"free: 71" -> Node71:<index71>
"size: 70""capacity: 80"}