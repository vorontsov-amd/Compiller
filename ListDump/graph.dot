digraph G{
rankdir=LR
edge[color=white]
Node0[shape=record, label =" <index0> index 0 | { Prev 85  | Node type is UNKNOWN. Data: nothing | <next0> Next 1 } " ];
Node0->Node1;
Node1[shape=record, label =" <index1> index 1 | { Prev 0  | Node type is WORD. Data: define | <next1> Next 2 } " ];
Node1->Node2;
Node2[shape=record, label =" <index2> index 2 | { Prev 1  | Node type is WORD. Data: func | <next2> Next 3 } " ];
Node2->Node3;
Node3[shape=record, label =" <index3> index 3 | { Prev 2  | Node type is BRACKET. Data: ( | <next3> Next 4 } " ];
Node3->Node4;
Node4[shape=record, label =" <index4> index 4 | { Prev 3  | Node type is BRACKET. Data: ) | <next4> Next 5 } " ];
Node4->Node5;
Node5[shape=record, label =" <index5> index 5 | { Prev 4  | Node type is BRACKET. Data: { | <next5> Next 6 } " ];
Node5->Node6;
Node6[shape=record, label =" <index6> index 6 | { Prev 5  | Node type is WORD. Data: var | <next6> Next 7 } " ];
Node6->Node7;
Node7[shape=record, label =" <index7> index 7 | { Prev 6  | Node type is WORD. Data: x | <next7> Next 8 } " ];
Node7->Node8;
Node8[shape=record, label =" <index8> index 8 | { Prev 7  | Node type is OPERATOR. Data: = | <next8> Next 9 } " ];
Node8->Node9;
Node9[shape=record, label =" <index9> index 9 | { Prev 8  | Node type is NUMBER. Data: 10 | <next9> Next 10 } " ];
Node9->Node10;
Node10[shape=record, label =" <index10> index 10 | { Prev 9  | Node type is OPERATOR. Data: ; | <next10> Next 11 } " ];
Node10->Node11;
Node11[shape=record, label =" <index11> index 11 | { Prev 10  | Node type is WORD. Data: var | <next11> Next 12 } " ];
Node11->Node12;
Node12[shape=record, label =" <index12> index 12 | { Prev 11  | Node type is WORD. Data: y | <next12> Next 13 } " ];
Node12->Node13;
Node13[shape=record, label =" <index13> index 13 | { Prev 12  | Node type is OPERATOR. Data: = | <next13> Next 14 } " ];
Node13->Node14;
Node14[shape=record, label =" <index14> index 14 | { Prev 13  | Node type is NUMBER. Data: 5 | <next14> Next 15 } " ];
Node14->Node15;
Node15[shape=record, label =" <index15> index 15 | { Prev 14  | Node type is OPERATOR. Data: ; | <next15> Next 16 } " ];
Node15->Node16;
Node16[shape=record, label =" <index16> index 16 | { Prev 15  | Node type is WORD. Data: Translate | <next16> Next 17 } " ];
Node16->Node17;
Node17[shape=record, label =" <index17> index 17 | { Prev 16  | Node type is BRACKET. Data: ( | <next17> Next 18 } " ];
Node17->Node18;
Node18[shape=record, label =" <index18> index 18 | { Prev 17  | Node type is WORD. Data: x | <next18> Next 19 } " ];
Node18->Node19;
Node19[shape=record, label =" <index19> index 19 | { Prev 18  | Node type is OPERATOR. Data: , | <next19> Next 20 } " ];
Node19->Node20;
Node20[shape=record, label =" <index20> index 20 | { Prev 19  | Node type is WORD. Data: y | <next20> Next 21 } " ];
Node20->Node21;
Node21[shape=record, label =" <index21> index 21 | { Prev 20  | Node type is BRACKET. Data: ) | <next21> Next 22 } " ];
Node21->Node22;
Node22[shape=record, label =" <index22> index 22 | { Prev 21  | Node type is OPERATOR. Data: ; | <next22> Next 23 } " ];
Node22->Node23;
Node23[shape=record, label =" <index23> index 23 | { Prev 22  | Node type is BRACKET. Data: } | <next23> Next 24 } " ];
Node23->Node24;
Node24[shape=record, label =" <index24> index 24 | { Prev 23  | Node type is WORD. Data: define | <next24> Next 25 } " ];
Node24->Node25;
Node25[shape=record, label =" <index25> index 25 | { Prev 24  | Node type is WORD. Data: Translate | <next25> Next 26 } " ];
Node25->Node26;
Node26[shape=record, label =" <index26> index 26 | { Prev 25  | Node type is BRACKET. Data: ( | <next26> Next 27 } " ];
Node26->Node27;
Node27[shape=record, label =" <index27> index 27 | { Prev 26  | Node type is WORD. Data: x | <next27> Next 28 } " ];
Node27->Node28;
Node28[shape=record, label =" <index28> index 28 | { Prev 27  | Node type is OPERATOR. Data: , | <next28> Next 29 } " ];
Node28->Node29;
Node29[shape=record, label =" <index29> index 29 | { Prev 28  | Node type is WORD. Data: y | <next29> Next 30 } " ];
Node29->Node30;
Node30[shape=record, label =" <index30> index 30 | { Prev 29  | Node type is BRACKET. Data: ) | <next30> Next 31 } " ];
Node30->Node31;
Node31[shape=record, label =" <index31> index 31 | { Prev 30  | Node type is BRACKET. Data: { | <next31> Next 32 } " ];
Node31->Node32;
Node32[shape=record, label =" <index32> index 32 | { Prev 31  | Node type is WORD. Data: x | <next32> Next 33 } " ];
Node32->Node33;
Node33[shape=record, label =" <index33> index 33 | { Prev 32  | Node type is OPERATOR. Data: = | <next33> Next 34 } " ];
Node33->Node34;
Node34[shape=record, label =" <index34> index 34 | { Prev 33  | Node type is NUMBER. Data: 4 | <next34> Next 35 } " ];
Node34->Node35;
Node35[shape=record, label =" <index35> index 35 | { Prev 34  | Node type is OPERATOR. Data: ; | <next35> Next 36 } " ];
Node35->Node36;
Node36[shape=record, label =" <index36> index 36 | { Prev 35  | Node type is WORD. Data: y | <next36> Next 37 } " ];
Node36->Node37;
Node37[shape=record, label =" <index37> index 37 | { Prev 36  | Node type is OPERATOR. Data: = | <next37> Next 38 } " ];
Node37->Node38;
Node38[shape=record, label =" <index38> index 38 | { Prev 37  | Node type is WORD. Data: x | <next38> Next 39 } " ];
Node38->Node39;
Node39[shape=record, label =" <index39> index 39 | { Prev 38  | Node type is OPERATOR. Data: + | <next39> Next 40 } " ];
Node39->Node40;
Node40[shape=record, label =" <index40> index 40 | { Prev 39  | Node type is NUMBER. Data: 5 | <next40> Next 41 } " ];
Node40->Node41;
Node41[shape=record, label =" <index41> index 41 | { Prev 40  | Node type is OPERATOR. Data: ; | <next41> Next 42 } " ];
Node41->Node42;
Node42[shape=record, label =" <index42> index 42 | { Prev 41  | Node type is WORD. Data: var | <next42> Next 43 } " ];
Node42->Node43;
Node43[shape=record, label =" <index43> index 43 | { Prev 42  | Node type is WORD. Data: z | <next43> Next 44 } " ];
Node43->Node44;
Node44[shape=record, label =" <index44> index 44 | { Prev 43  | Node type is OPERATOR. Data: = | <next44> Next 45 } " ];
Node44->Node45;
Node45[shape=record, label =" <index45> index 45 | { Prev 44  | Node type is BRACKET. Data: ( | <next45> Next 46 } " ];
Node45->Node46;
Node46[shape=record, label =" <index46> index 46 | { Prev 45  | Node type is WORD. Data: x | <next46> Next 47 } " ];
Node46->Node47;
Node47[shape=record, label =" <index47> index 47 | { Prev 46  | Node type is OPERATOR. Data: * | <next47> Next 48 } " ];
Node47->Node48;
Node48[shape=record, label =" <index48> index 48 | { Prev 47  | Node type is WORD. Data: y | <next48> Next 49 } " ];
Node48->Node49;
Node49[shape=record, label =" <index49> index 49 | { Prev 48  | Node type is OPERATOR. Data: - | <next49> Next 50 } " ];
Node49->Node50;
Node50[shape=record, label =" <index50> index 50 | { Prev 49  | Node type is NUMBER. Data: 3 | <next50> Next 51 } " ];
Node50->Node51;
Node51[shape=record, label =" <index51> index 51 | { Prev 50  | Node type is BRACKET. Data: ) | <next51> Next 52 } " ];
Node51->Node52;
Node52[shape=record, label =" <index52> index 52 | { Prev 51  | Node type is OPERATOR. Data: / | <next52> Next 53 } " ];
Node52->Node53;
Node53[shape=record, label =" <index53> index 53 | { Prev 52  | Node type is NUMBER. Data: 7 | <next53> Next 54 } " ];
Node53->Node54;
Node54[shape=record, label =" <index54> index 54 | { Prev 53  | Node type is OPERATOR. Data: ; | <next54> Next 55 } " ];
Node54->Node55;
Node55[shape=record, label =" <index55> index 55 | { Prev 54  | Node type is WORD. Data: var | <next55> Next 56 } " ];
Node55->Node56;
Node56[shape=record, label =" <index56> index 56 | { Prev 55  | Node type is WORD. Data: c | <next56> Next 57 } " ];
Node56->Node57;
Node57[shape=record, label =" <index57> index 57 | { Prev 56  | Node type is OPERATOR. Data: = | <next57> Next 58 } " ];
Node57->Node58;
Node58[shape=record, label =" <index58> index 58 | { Prev 57  | Node type is NUMBER. Data: 0 | <next58> Next 59 } " ];
Node58->Node59;
Node59[shape=record, label =" <index59> index 59 | { Prev 58  | Node type is OPERATOR. Data: ; | <next59> Next 60 } " ];
Node59->Node60;
Node60[shape=record, label =" <index60> index 60 | { Prev 59  | Node type is WORD. Data: print | <next60> Next 61 } " ];
Node60->Node61;
Node61[shape=record, label =" <index61> index 61 | { Prev 60  | Node type is BRACKET. Data: ( | <next61> Next 62 } " ];
Node61->Node62;
Node62[shape=record, label =" <index62> index 62 | { Prev 61  | Node type is WORD. Data: x | <next62> Next 63 } " ];
Node62->Node63;
Node63[shape=record, label =" <index63> index 63 | { Prev 62  | Node type is OPERATOR. Data: , | <next63> Next 64 } " ];
Node63->Node64;
Node64[shape=record, label =" <index64> index 64 | { Prev 63  | Node type is WORD. Data: y | <next64> Next 65 } " ];
Node64->Node65;
Node65[shape=record, label =" <index65> index 65 | { Prev 64  | Node type is OPERATOR. Data: , | <next65> Next 66 } " ];
Node65->Node66;
Node66[shape=record, label =" <index66> index 66 | { Prev 65  | Node type is WORD. Data: z | <next66> Next 67 } " ];
Node66->Node67;
Node67[shape=record, label =" <index67> index 67 | { Prev 66  | Node type is OPERATOR. Data: , | <next67> Next 68 } " ];
Node67->Node68;
Node68[shape=record, label =" <index68> index 68 | { Prev 67  | Node type is WORD. Data: c | <next68> Next 69 } " ];
Node68->Node69;
Node69[shape=record, label =" <index69> index 69 | { Prev 68  | Node type is BRACKET. Data: ) | <next69> Next 70 } " ];
Node69->Node70;
Node70[shape=record, label =" <index70> index 70 | { Prev 69  | Node type is OPERATOR. Data: ; | <next70> Next 71 } " ];
Node70->Node71;
Node71[shape=record, label =" <index71> index 71 | { Prev 70  | Node type is BRACKET. Data: } | <next71> Next 72 } " ];
Node71->Node72;
Node72[shape=record, label =" <index72> index 72 | { Prev 71  | Node type is WORD. Data: define | <next72> Next 73 } " ];
Node72->Node73;
Node73[shape=record, label =" <index73> index 73 | { Prev 72  | Node type is WORD. Data: print | <next73> Next 74 } " ];
Node73->Node74;
Node74[shape=record, label =" <index74> index 74 | { Prev 73  | Node type is BRACKET. Data: ( | <next74> Next 75 } " ];
Node74->Node75;
Node75[shape=record, label =" <index75> index 75 | { Prev 74  | Node type is WORD. Data: x | <next75> Next 76 } " ];
Node75->Node76;
Node76[shape=record, label =" <index76> index 76 | { Prev 75  | Node type is OPERATOR. Data: , | <next76> Next 77 } " ];
Node76->Node77;
Node77[shape=record, label =" <index77> index 77 | { Prev 76  | Node type is WORD. Data: y | <next77> Next 78 } " ];
Node77->Node78;
Node78[shape=record, label =" <index78> index 78 | { Prev 77  | Node type is OPERATOR. Data: , | <next78> Next 79 } " ];
Node78->Node79;
Node79[shape=record, label =" <index79> index 79 | { Prev 78  | Node type is WORD. Data: z | <next79> Next 80 } " ];
Node79->Node80;
Node80[shape=record, label =" <index80> index 80 | { Prev 79  | Node type is OPERATOR. Data: , | <next80> Next 81 } " ];
Node80->Node81;
Node81[shape=record, label =" <index81> index 81 | { Prev 80  | Node type is WORD. Data: c | <next81> Next 82 } " ];
Node81->Node82;
Node82[shape=record, label =" <index82> index 82 | { Prev 81  | Node type is BRACKET. Data: ) | <next82> Next 83 } " ];
Node82->Node83;
Node83[shape=record, label =" <index83> index 83 | { Prev 82  | Node type is BRACKET. Data: { | <next83> Next 84 } " ];
Node83->Node84;
Node84[shape=record, label =" <index84> index 84 | { Prev 83  | Node type is BRACKET. Data: } | <next84> Next 85 } " ];
Node84->Node85;
Node85[shape=record, label =" <index85> index 85 | { Prev 84  | Node type is TERMINATED. Data: nothing | <next85> Next 0 } " ];
Node85->Node86;
Node86[shape=record, label =" <index86> index 86 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next86> Next -87 } " ];
Node86->Node87;
Node87[shape=record, label =" <index87> index 87 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next87> Next -88 } " ];
Node87->Node88;
Node88[shape=record, label =" <index88> index 88 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next88> Next -89 } " ];
Node88->Node89;
Node89[shape=record, label =" <index89> index 89 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next89> Next -90 } " ];
Node89->Node90;
Node90[shape=record, label =" <index90> index 90 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next90> Next -91 } " ];
Node90->Node91;
Node91[shape=record, label =" <index91> index 91 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next91> Next -92 } " ];
Node91->Node92;
Node92[shape=record, label =" <index92> index 92 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next92> Next -93 } " ];
Node92->Node93;
Node93[shape=record, label =" <index93> index 93 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next93> Next -94 } " ];
Node93->Node94;
Node94[shape=record, label =" <index94> index 94 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next94> Next -95 } " ];
Node94->Node95;
Node95[shape=record, label =" <index95> index 95 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next95> Next -96 } " ];
Node95->Node96;
Node96[shape=record, label =" <index96> index 96 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next96> Next -97 } " ];
Node96->Node97;
Node97[shape=record, label =" <index97> index 97 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next97> Next -98 } " ];
Node97->Node98;
Node98[shape=record, label =" <index98> index 98 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next98> Next -99 } " ];
Node98->Node99;
Node99[shape=record, label =" <index99> index 99 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next99> Next -100 } " ];
Node99->Node100;
Node100[shape=record, label =" <index100> index 100 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next100> Next -101 } " ];
Node100->Node101;
Node101[shape=record, label =" <index101> index 101 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next101> Next -102 } " ];
Node101->Node102;
Node102[shape=record, label =" <index102> index 102 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next102> Next -103 } " ];
Node102->Node103;
Node103[shape=record, label =" <index103> index 103 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next103> Next -104 } " ];
Node103->Node104;
Node104[shape=record, label =" <index104> index 104 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next104> Next -105 } " ];
Node104->Node105;
Node105[shape=record, label =" <index105> index 105 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next105> Next -106 } " ];
Node105->Node106;
Node106[shape=record, label =" <index106> index 106 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next106> Next -107 } " ];
Node106->Node107;
Node107[shape=record, label =" <index107> index 107 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next107> Next -108 } " ];
Node107->Node108;
Node108[shape=record, label =" <index108> index 108 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next108> Next -109 } " ];
Node108->Node109;
Node109[shape=record, label =" <index109> index 109 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next109> Next -110 } " ];
Node109->Node110;
Node110[shape=record, label =" <index110> index 110 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next110> Next -111 } " ];
Node110->Node111;
Node111[shape=record, label =" <index111> index 111 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next111> Next -112 } " ];
Node111->Node112;
Node112[shape=record, label =" <index112> index 112 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next112> Next -113 } " ];
Node112->Node113;
Node113[shape=record, label =" <index113> index 113 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next113> Next -114 } " ];
Node113->Node114;
Node114[shape=record, label =" <index114> index 114 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next114> Next -115 } " ];
Node114->Node115;
Node115[shape=record, label =" <index115> index 115 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next115> Next -116 } " ];
Node115->Node116;
Node116[shape=record, label =" <index116> index 116 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next116> Next -117 } " ];
Node116->Node117;
Node117[shape=record, label =" <index117> index 117 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next117> Next -118 } " ];
Node117->Node118;
Node118[shape=record, label =" <index118> index 118 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next118> Next -119 } " ];
Node118->Node119;
Node119[shape=record, label =" <index119> index 119 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next119> Next -120 } " ];
Node119->Node120;
Node120[shape=record, label =" <index120> index 120 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next120> Next -121 } " ];
Node120->Node121;
Node121[shape=record, label =" <index121> index 121 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next121> Next -122 } " ];
Node121->Node122;
Node122[shape=record, label =" <index122> index 122 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next122> Next -123 } " ];
Node122->Node123;
Node123[shape=record, label =" <index123> index 123 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next123> Next -124 } " ];
Node123->Node124;
Node124[shape=record, label =" <index124> index 124 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next124> Next -125 } " ];
Node124->Node125;
Node125[shape=record, label =" <index125> index 125 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next125> Next -126 } " ];
Node125->Node126;
Node126[shape=record, label =" <index126> index 126 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next126> Next -127 } " ];
Node126->Node127;
Node127[shape=record, label =" <index127> index 127 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next127> Next -128 } " ];
Node127->Node128;
Node128[shape=record, label =" <index128> index 128 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next128> Next -129 } " ];
Node128->Node129;
Node129[shape=record, label =" <index129> index 129 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next129> Next -130 } " ];
Node129->Node130;
Node130[shape=record, label =" <index130> index 130 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next130> Next -131 } " ];
Node130->Node131;
Node131[shape=record, label =" <index131> index 131 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next131> Next -132 } " ];
Node131->Node132;
Node132[shape=record, label =" <index132> index 132 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next132> Next -133 } " ];
Node132->Node133;
Node133[shape=record, label =" <index133> index 133 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next133> Next -134 } " ];
Node133->Node134;
Node134[shape=record, label =" <index134> index 134 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next134> Next -135 } " ];
Node134->Node135;
Node135[shape=record, label =" <index135> index 135 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next135> Next -136 } " ];
Node135->Node136;
Node136[shape=record, label =" <index136> index 136 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next136> Next -137 } " ];
Node136->Node137;
Node137[shape=record, label =" <index137> index 137 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next137> Next -138 } " ];
Node137->Node138;
Node138[shape=record, label =" <index138> index 138 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next138> Next -139 } " ];
Node138->Node139;
Node139[shape=record, label =" <index139> index 139 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next139> Next -140 } " ];
Node139->Node140;
Node140[shape=record, label =" <index140> index 140 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next140> Next -141 } " ];
Node140->Node141;
Node141[shape=record, label =" <index141> index 141 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next141> Next -142 } " ];
Node141->Node142;
Node142[shape=record, label =" <index142> index 142 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next142> Next -143 } " ];
Node142->Node143;
Node143[shape=record, label =" <index143> index 143 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next143> Next -144 } " ];
Node143->Node144;
Node144[shape=record, label =" <index144> index 144 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next144> Next -145 } " ];
Node144->Node145;
Node145[shape=record, label =" <index145> index 145 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next145> Next -146 } " ];
Node145->Node146;
Node146[shape=record, label =" <index146> index 146 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next146> Next -147 } " ];
Node146->Node147;
Node147[shape=record, label =" <index147> index 147 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next147> Next -148 } " ];
Node147->Node148;
Node148[shape=record, label =" <index148> index 148 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next148> Next -149 } " ];
Node148->Node149;
Node149[shape=record, label =" <index149> index 149 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next149> Next -150 } " ];
Node149->Node150;
Node150[shape=record, label =" <index150> index 150 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next150> Next -151 } " ];
Node150->Node151;
Node151[shape=record, label =" <index151> index 151 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next151> Next -152 } " ];
Node151->Node152;
Node152[shape=record, label =" <index152> index 152 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next152> Next -153 } " ];
Node152->Node153;
Node153[shape=record, label =" <index153> index 153 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next153> Next -154 } " ];
Node153->Node154;
Node154[shape=record, label =" <index154> index 154 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next154> Next -155 } " ];
Node154->Node155;
Node155[shape=record, label =" <index155> index 155 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next155> Next -156 } " ];
Node155->Node156;
Node156[shape=record, label =" <index156> index 156 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next156> Next -157 } " ];
Node156->Node157;
Node157[shape=record, label =" <index157> index 157 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next157> Next -158 } " ];
Node157->Node158;
Node158[shape=record, label =" <index158> index 158 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next158> Next -159 } " ];
Node158->Node159;
Node159[shape=record, label =" <index159> index 159 | { Prev -1  | Node type is UNKNOWN. Data: nothing | <next159> Next -160 } " ];
edge[color=black]
Node1:<next1> -> Node2:<index2>;
Node2:<next2> -> Node3:<index3>;
Node3:<next3> -> Node4:<index4>;
Node4:<next4> -> Node5:<index5>;
Node5:<next5> -> Node6:<index6>;
Node6:<next6> -> Node7:<index7>;
Node7:<next7> -> Node8:<index8>;
Node8:<next8> -> Node9:<index9>;
Node9:<next9> -> Node10:<index10>;
Node10:<next10> -> Node11:<index11>;
Node11:<next11> -> Node12:<index12>;
Node12:<next12> -> Node13:<index13>;
Node13:<next13> -> Node14:<index14>;
Node14:<next14> -> Node15:<index15>;
Node15:<next15> -> Node16:<index16>;
Node16:<next16> -> Node17:<index17>;
Node17:<next17> -> Node18:<index18>;
Node18:<next18> -> Node19:<index19>;
Node19:<next19> -> Node20:<index20>;
Node20:<next20> -> Node21:<index21>;
Node21:<next21> -> Node22:<index22>;
Node22:<next22> -> Node23:<index23>;
Node23:<next23> -> Node24:<index24>;
Node24:<next24> -> Node25:<index25>;
Node25:<next25> -> Node26:<index26>;
Node26:<next26> -> Node27:<index27>;
Node27:<next27> -> Node28:<index28>;
Node28:<next28> -> Node29:<index29>;
Node29:<next29> -> Node30:<index30>;
Node30:<next30> -> Node31:<index31>;
Node31:<next31> -> Node32:<index32>;
Node32:<next32> -> Node33:<index33>;
Node33:<next33> -> Node34:<index34>;
Node34:<next34> -> Node35:<index35>;
Node35:<next35> -> Node36:<index36>;
Node36:<next36> -> Node37:<index37>;
Node37:<next37> -> Node38:<index38>;
Node38:<next38> -> Node39:<index39>;
Node39:<next39> -> Node40:<index40>;
Node40:<next40> -> Node41:<index41>;
Node41:<next41> -> Node42:<index42>;
Node42:<next42> -> Node43:<index43>;
Node43:<next43> -> Node44:<index44>;
Node44:<next44> -> Node45:<index45>;
Node45:<next45> -> Node46:<index46>;
Node46:<next46> -> Node47:<index47>;
Node47:<next47> -> Node48:<index48>;
Node48:<next48> -> Node49:<index49>;
Node49:<next49> -> Node50:<index50>;
Node50:<next50> -> Node51:<index51>;
Node51:<next51> -> Node52:<index52>;
Node52:<next52> -> Node53:<index53>;
Node53:<next53> -> Node54:<index54>;
Node54:<next54> -> Node55:<index55>;
Node55:<next55> -> Node56:<index56>;
Node56:<next56> -> Node57:<index57>;
Node57:<next57> -> Node58:<index58>;
Node58:<next58> -> Node59:<index59>;
Node59:<next59> -> Node60:<index60>;
Node60:<next60> -> Node61:<index61>;
Node61:<next61> -> Node62:<index62>;
Node62:<next62> -> Node63:<index63>;
Node63:<next63> -> Node64:<index64>;
Node64:<next64> -> Node65:<index65>;
Node65:<next65> -> Node66:<index66>;
Node66:<next66> -> Node67:<index67>;
Node67:<next67> -> Node68:<index68>;
Node68:<next68> -> Node69:<index69>;
Node69:<next69> -> Node70:<index70>;
Node70:<next70> -> Node71:<index71>;
Node71:<next71> -> Node72:<index72>;
Node72:<next72> -> Node73:<index73>;
Node73:<next73> -> Node74:<index74>;
Node74:<next74> -> Node75:<index75>;
Node75:<next75> -> Node76:<index76>;
Node76:<next76> -> Node77:<index77>;
Node77:<next77> -> Node78:<index78>;
Node78:<next78> -> Node79:<index79>;
Node79:<next79> -> Node80:<index80>;
Node80:<next80> -> Node81:<index81>;
Node81:<next81> -> Node82:<index82>;
Node82:<next82> -> Node83:<index83>;
Node83:<next83> -> Node84:<index84>;
Node84:<next84> -> Node85:<index85>;
"head: 1" -> Node1:<index1>
Node85:<index85> -> "tail: 85"
"free: 86" -> Node86:<index86>
"size: 85""capacity: 160"}