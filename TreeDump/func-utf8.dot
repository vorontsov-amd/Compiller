digraph func{
Node0x555925dea980[shape="record", label="Data: define"];
Node0x555925dea770[shape="record", label="Data: func"];
Node0x555925dea7c0[shape="record", label="Data: ;"];
Node0x555925dea840[shape="record", label="Data: print"];
Node0x555925dea810[shape="record", label="Data: Enter number test programm"];
Node0x555925dea840->Node0x555925dea810;
Node0x555925dea7c0->Node0x555925dea840;
Node0x555925dea6c0[shape="record", label="Data: ;"];
Node0x555925dea580[shape="record", label="Data: print"];
Node0x555925deac60[shape="record", label="Data: ,"];
Node0x555925deab70[shape="record", label="Data: 1"];
Node0x555925deac60->Node0x555925deab70;
Node0x555925deaa00[shape="record", label="Data: SolveSquareEquation"];
Node0x555925deac60->Node0x555925deaa00;
Node0x555925dea580->Node0x555925deac60;
Node0x555925dea6c0->Node0x555925dea580;
Node0x555925dea890[shape="record", label="Data: ;"];
Node0x555925dea720[shape="record", label="Data: print"];
Node0x555925dea620[shape="record", label="Data: ,"];
Node0x555925dea5d0[shape="record", label="Data: 2"];
Node0x555925dea620->Node0x555925dea5d0;
Node0x555925deb080[shape="record", label="Data: fibonacci"];
Node0x555925dea620->Node0x555925deb080;
Node0x555925dea720->Node0x555925dea620;
Node0x555925dea890->Node0x555925dea720;
Node0x555925deb400[shape="record", label="Data: ;"];
Node0x555925deb2e0[shape="record", label="Data: print"];
Node0x555925deb1f0[shape="record", label="Data: ,"];
Node0x555925deb0d0[shape="record", label="Data: 3"];
Node0x555925deb1f0->Node0x555925deb0d0;
Node0x555925deb630[shape="record", label="Data: factorial"];
Node0x555925deb1f0->Node0x555925deb630;
Node0x555925deb2e0->Node0x555925deb1f0;
Node0x555925deb400->Node0x555925deb2e0;
Node0x555925deb5e0[shape="record", label="Data: ;"];
Node0x555925deb590[shape="record", label="Data: input"];
Node0x555925deb4f0[shape="record", label="Data: x"];
Node0x555925deb590->Node0x555925deb4f0;
Node0x555925deb5e0->Node0x555925deb590;
Node0x555925deb240[shape="record", label="Data: ;"];
Node0x555925deb380[shape="record", label="Data: while"];
Node0x555925deb3d0[shape="record", label="Data: ||"];
Node0x555925deb330[shape="record", label="Data: <"];
Node0x555925deb4a0[shape="record", label="Data: x"];
Node0x555925deb330->Node0x555925deb4a0;
Node0x555925deb450[shape="record", label="Data: 1"];
Node0x555925deb330->Node0x555925deb450;
Node0x555925deb3d0->Node0x555925deb330;
Node0x555925deb540[shape="record", label="Data: >"];
Node0x555925deb290[shape="record", label="Data: x"];
Node0x555925deb540->Node0x555925deb290;
Node0x555925deafe0[shape="record", label="Data: 3"];
Node0x555925deb540->Node0x555925deafe0;
Node0x555925deb3d0->Node0x555925deb540;
Node0x555925deb380->Node0x555925deb3d0;
Node0x555925deaf40[shape="record", label="Data: ;"];
Node0x555925deaef0[shape="record", label="Data: ="];
Node0x555925deacb0[shape="record", label="Data: x"];
Node0x555925deaef0->Node0x555925deacb0;
Node0x555925deb170[shape="record", label="Data: input"];
Node0x555925deb1c0[shape="record", label="Data: try again"];
Node0x555925deb170->Node0x555925deb1c0;
Node0x555925deaef0->Node0x555925deb170;
Node0x555925deaf40->Node0x555925deaef0;
Node0x555925deb380->Node0x555925deaf40;
Node0x555925deb240->Node0x555925deb380;
Node0x555925deb120[shape="record", label="Data: ;"];
Node0x555925deb030[shape="record", label="Data: if"];
Node0x555925deadf0[shape="record", label="Data: =="];
Node0x555925dead50[shape="record", label="Data: x"];
Node0x555925deadf0->Node0x555925dead50;
Node0x555925deae70[shape="record", label="Data: 1"];
Node0x555925deadf0->Node0x555925deae70;
Node0x555925deb030->Node0x555925deadf0;
Node0x555925deaec0[shape="record", label="Data: else"];
Node0x555925deae20[shape="record", label="Data: ;"];
Node0x555925dead00[shape="record", label="Data: SolveSquareEquation"];
Node0x555925deae20->Node0x555925dead00;
Node0x555925deaec0->Node0x555925deae20;
Node0x555925deaf90[shape="record", label="Data: if"];
Node0x555925deada0[shape="record", label="Data: =="];
Node0x555925dea8e0[shape="record", label="Data: x"];
Node0x555925deada0->Node0x555925dea8e0;
Node0x555925deaaf0[shape="record", label="Data: 2"];
Node0x555925deada0->Node0x555925deaaf0;
Node0x555925deaf90->Node0x555925deada0;
Node0x555925deab20[shape="record", label="Data: else"];
Node0x555925deaaa0[shape="record", label="Data: ;"];
Node0x555925deaa50[shape="record", label="Data: fibonacci"];
Node0x555925deaaa0->Node0x555925deaa50;
Node0x555925deab20->Node0x555925deaaa0;
Node0x555925deac10[shape="record", label="Data: ;"];
Node0x555925deabc0[shape="record", label="Data: factorial"];
Node0x555925deac10->Node0x555925deabc0;
Node0x555925deab20->Node0x555925deac10;
Node0x555925deaf90->Node0x555925deab20;
Node0x555925deaec0->Node0x555925deaf90;
Node0x555925deb030->Node0x555925deaec0;
Node0x555925deb120->Node0x555925deb030;
Node0x555925dea930[shape="record", label="Data: ;"];
Node0x555925dea9b0[shape="record", label="Data: print"];
Node0x555925decd00[shape="record", label="Data: Done"];
Node0x555925dea9b0->Node0x555925decd00;
Node0x555925dea930->Node0x555925dea9b0;
Node0x555925deb120->Node0x555925dea930;
Node0x555925deb240->Node0x555925deb120;
Node0x555925deb5e0->Node0x555925deb240;
Node0x555925deb400->Node0x555925deb5e0;
Node0x555925dea890->Node0x555925deb400;
Node0x555925dea6c0->Node0x555925dea890;
Node0x555925dea7c0->Node0x555925dea6c0;
Node0x555925dea770->Node0x555925dea7c0;
Node0x555925dea980->Node0x555925dea770;
}