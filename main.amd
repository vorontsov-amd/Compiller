define func()
{
    print('Enter', 'number', 'test', 'programm');
    print(1, 'SolveSquareEquation');
    print(2, 'fubonacci');
    print(3, 'factorial');
    input(x);

    while (x < 1 || x > 3)
    {
        x = input('try', 'again');
    };
    if (x == 1) { SolveSquareEquation(); }
    else if (x == 2) { fubonacci(); }
    else { factorial(); };

    print('Done');
}


define SolveSquareEquation()
{
    var a = input('enter', 'a');
    var b = input('enter', 'b');
    var c = input('enter', 'c');
    var num_sol = NumSol(a, b, c);
    print(num_sol);
    Solve(a, b, c, num_sol);
}


define fubonacci()
{
    var x = input('enter', 'fubonacci', 'number');
    var i = 1;
    while (i <= x)
    {
        var t = fib(i);
        print(i, t);
        i = i + 1;
    };
}

define factorial()
{
    var x = input('enter', 'factorial', 'number');
    var i = 1;
    while (i <= x)
    {
        var t = fuck(i);
        print(i, t);
        i = i + 1;
    };
}


define fuck(new x)
{
    if (x == 1)
    {
        return 1;
    }
    else
    {
        return x * fuck(x - 1);
    };
}


define fib(new x)
{
    if (x == 1 || x == 2)
    {
        return 1;
    }
    else
    {
        return fib(x - 2) + fib(x - 1);
    };
}




define Solve(new a, new b, new c, new num_sol)
{
    print('answer');

    if (num_sol == 2)
    {
        var x1 = 0;
        var x2 = 0;
        SolveSquare(a, b, c, x1, x2);
        print(x1, x2);
    }
    else if (num_sol == 1)
    {
        var x = 0;
        if (a != 0)
        {
            SolveSquare(a, b, c, x, x);
        }
        else
        {
            SolveLinear(b, c, x);
        };
        print('x', x);
    }
    else if (num_sol == 0)
    {
        print('no', 'solutions');
    }
    else if (num_sol == -1)
    {
        print('infity', 'root');
    };
}


define NumSol(new a, new b, new c)
{
    if (a == 0 && b == 0 && c == 0)
    {
        return -1;
    }
    else if (a == 0)
    {
        return 1;
    }
    else
    {
        var D = CalcDiscr(a, b, c);
        if (D < 0)
        {
            return 0;
        }
        else if (D == 0)
        {
            return 1;
        }
        else
        {
            return 2;
        };
    };
}

define SolveSquare(new a, new b, new c, x1, x2)
{
    var D = CalcDiscr(a, b, c);
    x1 = (-b - sqrt(D)) / (2 * a);
    x2 = (-b + sqrt(D)) / (2 * a);
}

define SolveLinear(new a, new b, x)
{
    x = -b/a;
}

define CalcDiscr(new a, new b , new c)
{
	return b ^ 2 - 4 * a * c;
}
